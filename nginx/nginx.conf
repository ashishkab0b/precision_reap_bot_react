worker_processes auto;

events {
    worker_connections 1024;
}

http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name emapingbot.com www.emapingbot.com;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    server {

        listen 443 ssl;
        server_name emapingbot.com www.emapingbot.com;

        ssl_certificate /etc/letsencrypt/live/emapingbot.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/emapingbot.com/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' https://www.google.com https://www.gstatic.com https://js.stripe.com https://m.stripe.network; frame-src 'self' https://www.google.com https://www.gstatic.com https://js.stripe.com https://m.stripe.network;" always;

        # Serve React app
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }

        # Proxy API requests to Flask backend
        location /api/ {
            proxy_pass http://flask-backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route bot webhook requests to the bot service
        location /webhook {
            proxy_pass http://telegram-bot:8443;  
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Error logging
        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
    }
}