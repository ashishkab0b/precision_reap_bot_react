services:

  # redis:
  #   image: redis:latest
  #   container_name: "redis_db"
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  bot:
    build: ./bot
    ports:
      - "8001:8001"
    volumes:
      - ./bot:/app

  flask-backend:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./logs/flask:/app/logs
    env_file:
      - ./flask_app/.env
    environment:
      - FLASK_ENV=production
    depends_on:
      - redis

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot  # For Certbot challenge
      # - ./nginx/certbot_nginx.conf:/etc/nginx/conf.d/default.conf  # Temporary config
      - ./nginx/logs/error.log:/var/log/nginx/error.log
      - ./nginx/logs/access.log:/var/log/nginx/access.log
    depends_on:
      - flask-backend